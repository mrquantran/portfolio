[{"content":"","date":"February 24, 2024","externalUrl":null,"permalink":"/portfolio/tags/ai-engineering/","section":"Tags","summary":"","title":"Ai-Engineering","type":"tags"},{"content":"","date":"February 24, 2024","externalUrl":null,"permalink":"/portfolio/blog/","section":"Blogs","summary":"","title":"Blogs","type":"blog"},{"content":"","date":"February 24, 2024","externalUrl":null,"permalink":"/portfolio/series/career/","section":"Series","summary":"","title":"Career","type":"series"},{"content":"This blog post outlines my roadmap for studying AI Engineering, detailing the steps I plan to take, the resources I intend to use, and the milestones I aim to achieve.\nIntroduction Artificial Intelligence (AI) is revolutionizing industries across the globe, and I am eager to be part of this transformative journey. This blog post outlines my roadmap for studying AI Engineering, detailing the steps I plan to take, the resources I intend to use, and the milestones I aim to achieve.\nStep 1: Setting Clear Goals Short-Term Goals Understand the Fundamentals: Gain a strong foundation in mathematics, programming, and basic AI concepts. Complete Online Courses: Enroll in and complete introductory AI courses on platforms like Coursera, edX, and Udacity. Build Simple Projects: Apply what I\u0026rsquo;ve learned by working on small AI projects and experiments. Long-Term Goals Earn a Degree: Pursue a formal education in AI Engineering, either through a bachelor\u0026rsquo;s or master\u0026rsquo;s program. Develop Advanced Skills: Specialize in areas such as machine learning, deep learning, and natural language processing. Contribute to Open-Source Projects: Engage with the AI community by contributing to open-source AI projects. Step 2: Acquiring Essential Knowledge Mathematics A strong grasp of mathematics is crucial for AI. I will focus on:\nLinear Algebra: Understanding vectors, matrices, and their applications. Calculus: Learning about derivatives, integrals, and optimization techniques. Probability and Statistics: Grasping the concepts of probability distributions, statistical inference, and hypothesis testing. Programming Skills Proficiency in programming is a must for AI Engineering. My plan includes:\nPython: Mastering Python, the primary language used in AI development. Libraries and Frameworks: Familiarizing myself with key libraries and frameworks like NumPy, pandas, TensorFlow, and PyTorch. Basic AI Concepts Understanding the core concepts of AI, such as:\nMachine Learning: Learning about supervised, unsupervised, and reinforcement learning. Neural Networks: Exploring the architecture and functioning of neural networks and deep learning models. Step 3: Enrolling in Online Courses and Certifications Recommended Courses Coursera: Machine Learning by Andrew Ng Deep Learning Specialization by Andrew Ng and team edX: AI for Everyone by Andrew Ng Principles of Machine Learning by Microsoft Udacity: AI Programming with Python Deep Reinforcement Learning Nanodegree Certifications Google AI: Obtaining certifications such as TensorFlow Developer Certificate. Microsoft AI: Earning certifications through Microsoft’s AI Engineer program. Step 4: Practical Experience through Projects Building Projects Beginner Projects: Handwritten digit recognition using MNIST dataset. Simple chatbot using Natural Language Processing (NLP). Intermediate Projects: Image classification using Convolutional Neural Networks (CNNs). Sentiment analysis on social media posts. Advanced Projects: Implementing Generative Adversarial Networks (GANs) for image generation. Developing a recommendation system. Contributing to Open-Source GitHub: Contributing to AI projects and collaborating with other developers. Kaggle: Participating in AI competitions and learning from the community. Step 5: Pursuing Formal Education Bachelor\u0026rsquo;s or Master\u0026rsquo;s Degree Universities: Applying to universities with strong AI programs. Courses: Focusing on AI-specific courses and electives. Research: Engaging in AI research projects and internships. Step 6: Joining AI Communities and Networks Online Communities Reddit: Joining subreddits like r/MachineLearning and r/ArtificialIntelligence. Stack Overflow: Participating in discussions and seeking advice from experienced AI engineers. Professional Networks LinkedIn: Connecting with AI professionals and following AI-related companies. Meetups and Conferences: Attending AI conferences, webinars, and local meetups to stay updated with the latest trends and network with peers. Conclusion The journey to becoming an AI Engineer is challenging but incredibly rewarding. By setting clear goals, acquiring essential knowledge, gaining practical experience, pursuing formal education, and joining AI communities, I am confident in my ability to succeed in this exciting field. I look forward to sharing my progress and insights as I embark on this roadmap to studying AI Engineering.\n","date":"February 24, 2024","externalUrl":null,"permalink":"/portfolio/blog/my_roadmap_in_ai_engineering/","section":"Blogs","summary":"\u003cp\u003eThis blog post outlines my roadmap for studying AI Engineering, detailing the steps I plan to take, the resources I intend to use, and the milestones I aim to achieve.\u003c/p\u003e","title":"My Roadmap for studying AI Engineering","type":"blog"},{"content":"","date":"February 24, 2024","externalUrl":null,"permalink":"/portfolio/","section":"quan","summary":"","title":"quan","type":"page"},{"content":"","date":"February 24, 2024","externalUrl":null,"permalink":"/portfolio/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"February 24, 2024","externalUrl":null,"permalink":"/portfolio/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"December 24, 2023","externalUrl":null,"permalink":"/portfolio/tags/finland/","section":"Tags","summary":"","title":"Finland","type":"tags"},{"content":"","date":"December 24, 2023","externalUrl":null,"permalink":"/portfolio/series/finland/","section":"Series","summary":"","title":"Finland","type":"series"},{"content":"\nDeciding to leave a stable job is never easy, especially when you\u0026rsquo;ve invested two years of your life into it. However, sometimes the call for change becomes too loud to ignore\nThis was my reality a few months ago when I decided to leave my job and relocate to Finland. Here’s why I made this life-changing decision and what I hope to achieve in my new chapter.\nSeeking New Challenges After two years in my role, I found myself yearning for new challenges. The initial excitement had waned, and my professional growth felt stagnant. I believe that comfort can sometimes be the enemy of progress. Moving to Finland presented an opportunity to step out of my comfort zone and immerse myself in a new professional landscape. Finland\u0026rsquo;s burgeoning tech scene and innovative work culture were significant draws for me.\nQuality of Life Finland consistently ranks high in global quality of life indices. Factors such as excellent healthcare, a robust social security system, and a focus on work-life balance make it an attractive place to live. The idea of living in a society that values well-being and sustainability resonated deeply with me. I wanted to experience a lifestyle where professional success and personal happiness go hand-in-hand.\nEducation and Professional Development Finland is renowned for its education system. Even as a professional, there are numerous opportunities for continuous learning and development. The country encourages lifelong learning, and many employers support further education and professional development. I’m excited about the prospects of expanding my skill set and advancing my career in such a supportive environment.\nCultural Experience Living in a new country offers a rich cultural experience. Finland’s unique blend of tradition and modernity, its stunning natural landscapes, and the famed Finnish way of life (including the love for saunas and respect for nature) are all aspects I’m eager to explore. Experiencing different cultures broadens one’s perspective and fosters personal growth. I look forward to embracing Finnish culture and making new connections.\nWork-Life Balance The Finnish work culture places a strong emphasis on work-life balance. Unlike the often relentless pace found in many other countries, Finnish companies typically encourage employees to take breaks and prioritize their well-being. This balance is crucial for maintaining mental and physical health, and it\u0026rsquo;s something I felt was lacking in my previous job.\nAdventure and Exploration Lastly, the move to Finland is an adventure. It’s about exploring a new part of the world, trying new things, and stepping into the unknown. Life is too short to stay in one place out of fear or convenience. Embracing this change is about living fully and making the most out of the opportunities life presents.\nConclusion Leaving my job of two years was a difficult decision, but one that I believe is for the best. Moving to Finland is an exciting step toward new professional challenges, a better quality of life, and a chance to grow both personally and professionally. Change can be daunting, but it is also the catalyst for growth and new opportunities. Here’s to new beginnings in Finland!\n","date":"December 24, 2023","externalUrl":null,"permalink":"/portfolio/blog/lifestyle_in_finland/","section":"Blogs","summary":"\u003cp\u003e\u003cimg alt=\"./featured.jpg\" src=\"/portfolio/blog/lifestyle_in_finland/featured.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003eDeciding to leave a stable job is never easy, especially when you\u0026rsquo;ve invested two years of your life into it. However, sometimes the call for change becomes too loud to ignore\u003c/p\u003e","title":"Leave my 2 years job and moving to Finland","type":"blog"},{"content":"Object detection has become an essential task in computer vision, enabling applications ranging from self-driving cars to security systems. One of the most popular frameworks for real-time object detection is YOLO (You Only Look Once). In this blog, we\u0026rsquo;ll build a simple YOLOv10 project and explain why it works so effectively for object detection.\nIntroduction to YOLOv10 YOLO is a family of convolutional neural networks (CNN) designed for fast and accurate object detection. Unlike traditional methods that apply the detection model to multiple regions of an image, YOLO treats object detection as a single regression problem, predicting bounding boxes and class probabilities directly from full images in one evaluation. YOLOv10, the latest iteration, introduces several improvements in architecture, leading to better performance and accuracy.\nWhy YOLOv10 Works for Object Detection Speed and Accuracy YOLOv10 is designed for real-time object detection, achieving high speed without compromising on accuracy. Its single-shot approach ensures that the entire image is processed in one pass, making it faster than region-based approaches.\nUnified Architecture The unified architecture of YOLOv10 simplifies the detection pipeline, reducing the computational complexity and improving efficiency. This model processes images using a single network, leading to faster inference times.\nImproved Bounding Box Predictions YOLOv10 incorporates advanced techniques for more accurate bounding box predictions, such as anchor boxes, which are predefined shapes that help the network learn to detect objects of various sizes and shapes more effectively.\nScalability The architecture of YOLOv10 is scalable, meaning it can be adapted to different hardware capabilities and specific application needs, from mobile devices to high-end GPUs.\nBuilding a Simple YOLOv10 Project Let\u0026rsquo;s build a simple YOLOv10 object detection project using Python and PyTorch. This project will involve setting up the environment, loading a pre-trained YOLOv10 model, and running inference on sample images.\nStep 1: Setting Up the Environment First, we need to install the necessary dependencies. Open a terminal and run the following commands:\n# Create a virtual environment python -m venv yolov10_env source yolov10_env/bin/activate # On Windows, use `yolov10_env\\Scripts\\activate` # Install PyTorch and other required libraries pip install torch torchvision pip install opencv-python Step 2: Downloading the Pre-trained YOLOv10 Model Next, we\u0026rsquo;ll download the pre-trained YOLOv10 model. For the purpose of this tutorial, we\u0026rsquo;ll use a simplified version available in the PyTorch Hub.\nimport torch # Load the pre-trained YOLOv10 model from PyTorch Hub model = torch.hub.load(\u0026#39;ultralytics/yolov5\u0026#39;, \u0026#39;yolov5s\u0026#39;) Step 3: Running Inference on Sample Images We\u0026rsquo;ll now run the model on some sample images to see it in action.\nimport cv2 import matplotlib.pyplot as plt # Load sample image image_path = \u0026#39;path_to_your_image.jpg\u0026#39; img = cv2.imread(image_path) # Convert image to RGB img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) # Run inference results = model(img_rgb) # Display the results results.show() Step 4: Visualizing the Results The results.show() method will display the image with detected objects highlighted by bounding boxes. For more customized visualization, you can use Matplotlib to plot the results.\n# Extract bounding boxes and labels detections = results.xyxy[0].numpy() # Plot image with bounding boxes plt.imshow(img_rgb) ax = plt.gca() for detection in detections: xmin, ymin, xmax, ymax, confidence, class_id = detection rect = plt.Rectangle((xmin, ymin), xmax - xmin, ymax - ymin, fill=False, edgecolor=\u0026#39;red\u0026#39;, linewidth=2) ax.add_patch(rect) label = f\u0026#39;{model.names[int(class_id)]}: {confidence:.2f}\u0026#39; plt.text(xmin, ymin, label, color=\u0026#39;red\u0026#39;, fontsize=12, bbox=dict(facecolor=\u0026#39;yellow\u0026#39;, alpha=0.5)) plt.axis(\u0026#39;off\u0026#39;) plt.show() Conclusion In this blog, we\u0026rsquo;ve built a simple YOLOv10 object detection project and explored why YOLOv10 is so effective for real-time object detection. Its speed, accuracy, and unified architecture make it a powerful tool for various applications. By following the steps outlined, you can start experimenting with YOLOv10 for your own object detection tasks.\nFeel free to customize the project, explore different datasets, and fine-tune the model for improved performance. Happy detecting!\n","date":"March 14, 2021","externalUrl":null,"permalink":"/portfolio/project/build_yolov10_object_detection/","section":"Projects","summary":"Object detection has become an essential task in computer vision, enabling applications ranging from self-driving cars to security systems. One of the most popular frameworks for real-time object detection is YOLO (You Only Look Once). In this blog, we\u0026rsquo;ll build a simple YOLOv10 project and explain why it works so effectively for object detection.\nIntroduction to YOLOv10 YOLO is a family of convolutional neural networks (CNN) designed for fast and accurate object detection.","title":"Building a Simple YOLOv10 Project for Object Detection","type":"project"},{"content":"","date":"March 14, 2021","externalUrl":null,"permalink":"/portfolio/tags/computer-vision/","section":"Tags","summary":"","title":"Computer-Vision","type":"tags"},{"content":"","date":"March 14, 2021","externalUrl":null,"permalink":"/portfolio/series/how-to-create-your-blog/","section":"Series","summary":"","title":"How to Create Your Blog","type":"series"},{"content":"","date":"March 14, 2021","externalUrl":null,"permalink":"/portfolio/project/","section":"Projects","summary":"","title":"Projects","type":"project"},{"content":"\nWhat I do I have been shipping code for well over two decades now, and I still really love my work. I am a huge fan of the React framework and have decades worth of experience with the .NET ecosystem which is why I tend to gravitate towards front-end heavy full stack roles. I have entirely embraced TypeScript for anything I would normally have written in JavaScript - such as a React front-end, NodeJS middle tier code, or even personal experiments with React Native. Lately I have been focusing on automating my code quality through the use of good static analysis tools like ESLint and Prettier paired with an extensive test suite - usually leveraging Kent C. Dodd’s excellent Testing Library to enhance the Jest testing framework (example).\nHow I got here my bookshelf the books in the middle opened a new world for me\n","date":"January 1, 1","externalUrl":null,"permalink":"/portfolio/about/","section":"quan","summary":"What I do I have been shipping code for well over two decades now, and I still really love my work. I am a huge fan of the React framework and have decades worth of experience with the .NET ecosystem which is why I tend to gravitate towards front-end heavy full stack roles. I have entirely embraced TypeScript for anything I would normally have written in JavaScript - such as a React front-end, NodeJS middle tier code, or even personal experiments with React Native.","title":"About","type":"page"},{"content":"","date":"January 1, 1","externalUrl":null,"permalink":"/portfolio/archives/","section":"quan","summary":"","title":"Archives","type":"page"},{"content":"","date":"January 1, 1","externalUrl":null,"permalink":"/portfolio/guestbook/","section":"quan","summary":"","title":"Guestbook","type":"page"},{"content":"Maged, onout, johnliu33 ","date":"January 1, 1","externalUrl":null,"permalink":"/portfolio/sponsors/","section":"Sponsors Page","summary":"Maged, onout, johnliu33 ","title":"Sponsors Page","type":"sponsors"}]